{"version":3,"file":"artie.d.js","sources":["src/templates/config.ts","src/utils.ts","src/index.ts"],"sourcesContent":["export const configTemplate = {\n  options: {\n    defaultThresholds: {\n      warning: 10,\n      critical: 20,\n      levels: [\"OK\", \"WARNING\", \"ERROR\"]\n    },\n    metrics: {\n      lcom: {\n        enabled: true,\n        warning: 5,\n        critical: 10\n      },\n      wmc: {\n        enabled: true,\n        warning: 10,\n        critical: 25\n      },\n      rfc: {\n        enabled: true,\n        warning: 15,\n        critical: 30\n      },\n      cbo: {\n        enabled: true\n      }\n    }\n  },\n  includes: ['**/*.ts', '!**/*.d.ts'],\n  excludes: [\n    \"**/*.test.ts\",\n    \"node_modules\",\n    \"dist\",\n    \"scripts/**\"\n  ]\n}\n","import fg from 'fast-glob'\nimport { resolve, join } from 'path'\nimport { red, yellow, green } from 'colorette'\nimport { readdirSync, readFileSync } from 'fs'\nimport { ClassDeclaration, Project } from 'ts-morph'\nimport { MetricsConfiguration, MetricsParser, IMetricsModel } from 'tsmetrics-core'\nimport { CompilerOptions, createProgram, Symbol, forEachChild, isClassDeclaration, isConstructorDeclaration, parseJsonConfigFileContent, Program, readConfigFile, SourceFile, sys, TypeChecker, isPropertyDeclaration, ScriptTarget } from 'typescript'\n\nimport { MetricConfig, MetricResult } from './types/config.interface'\n\nexport async function getSourceFiles(directory: string, includes: string[], excludes: string[]): Promise<string[]> {\n  return await fg(includes, {\n    cwd: directory,\n    absolute: true,\n    onlyFiles: true,\n    followSymbolicLinks: false,\n    ignore: excludes,\n  })\n}\n\nexport function readFileContent(directory: string): string {\n  return readFileSync(directory, 'utf-8')\n}\n\nexport function printMetric(value: string, label: string): void {\n  const colorFn = {\n    'OK': green,\n    'WARNING': yellow,\n    'CRITICAL': red\n  }\n\n  const color = colorFn[label]\n\n  console.log(color(value))\n} \n\nexport function getProjectConfigPath(directory: string): string {\n  const configFile = readdirSync(directory).find((file: string) => {\n    return file.startsWith('tsconfig') && file.endsWith('.json')\n  })\n\n  if (!configFile) {\n    throw new Error('⚠️ tsconfig.json not found.')\n  }\n\n  return join(directory, configFile)\n}\n\nexport function getProjectTarget(configContent: string): ScriptTarget {\n  const configs = JSON.parse(configContent)\n  const target = configs.compilerOptions.target\n\n  return ScriptTarget[target as keyof typeof ScriptTarget] ?? ScriptTarget.ES2015\n}\n\nexport function getCompilerOptions(configPath: string): CompilerOptions {\n  const configFile = readConfigFile(configPath, sys.readFile)\n  if (configFile.error) {\n    throw new Error(`Failed to read tsconfig.json: ${configFile.error.messageText}`)\n  }\n\n  const projectConfig = parseJsonConfigFileContent(configFile.config, sys, resolve(configPath))\n  return projectConfig.options\n}\n\nexport function getSourceFileByPath(filePath: string, program: Program): SourceFile | void {\n  return program.getSourceFiles().find((file) => file.fileName === filePath)\n}\n\nexport function addClassDependencyFromSymbol(symbol: Symbol, dependencies: Set<string>): void {\n  const name = symbol.getName()\n  const declarations = symbol.getDeclarations()\n\n  if (!declarations && !dependencies.has(name)) {\n    dependencies.add(name)\n    return\n  }\n\n  for (const declaration of declarations!) {\n    if (isClassDeclaration(declaration) && declaration.name) {\n      const className = declaration.name.text\n      dependencies.add(className)\n      return\n    }\n  }\n\n}\n\nexport function addClassDependencies(property: any, typeChecker: TypeChecker, dependencies: Set<string>): void {\n  const type = typeChecker.getTypeAtLocation(property)\n  const symbol = type.getSymbol()\n  if (symbol) addClassDependencyFromSymbol(symbol, dependencies)\n}\n\nexport function collectClassDependencies(sourceFile: SourceFile, typeChecker: TypeChecker): Set<string> {\n  const dependencies = new Set<string>()\n\n  forEachChild(sourceFile, (node) => {\n    if (isClassDeclaration(node) && node.name) {\n      node.members.forEach((member) => {\n        if (isConstructorDeclaration(member)) {\n          member.parameters.forEach((parameter) => \n            addClassDependencies(parameter, typeChecker, dependencies)\n          )\n        }\n\n        if (isPropertyDeclaration(member) && member.initializer) {\n          addClassDependencies(member.initializer, typeChecker, dependencies)\n        }\n\n        if (node.heritageClauses) {\n          node.heritageClauses.forEach((clause) => {\n            clause.types.forEach((type) => addClassDependencies(type, typeChecker, dependencies))\n          })\n        }\n      })\n    }\n  })\n\n  return dependencies\n}\n\nexport function getMetricLabel(total: number, metricConfig: MetricConfig): string {\n  if (total >= metricConfig.critical!) return 'CRITICAL'\n  if (total >= metricConfig.warning!) return 'WARNING'\n\n  return 'OK'\n}\n\nexport function getClassDependenciesLength(filePath: string, program: Program): number {\n  const sourceFile = getSourceFileByPath(filePath, program)\n  if (!sourceFile) return 0\n  \n  const typeChecker = program.getTypeChecker()\n  const dependencies = collectClassDependencies(sourceFile, typeChecker)\n\n  return dependencies.size\n}\n\nexport function getFunctionsLength(fileContent: string): number {\n  const regex = /\\bfunction\\b|\\bclass\\b.*\\b\\w+\\s*\\(/g\n  const matches = fileContent.match(regex)\n\n  return matches ? matches.length : 0\n}\n\nexport function getCohesionLength(classDeclaration: ClassDeclaration): number {\n  const methods = classDeclaration.getMethods()\n  const properties = classDeclaration\n    .getProperties()\n    .map((property) => property.getName())\n\n  if (methods.length < 2) return 0\n\n  const methodProperties = methods.map((method) => {\n    const body = method.getBodyText() ?? ''\n    return properties.filter((property) => body.includes(`this.${property}`))\n  })\n\n  let shared = 0\n  let unshared = 0\n\n  for (let i = 0; i < methodProperties.length; i++) {\n    for (let j = i + 1; j < methodProperties.length; j++) {\n      const intersection = methodProperties[i].filter((property) => methodProperties[j].includes(property))\n      if (intersection.length > 0) shared++\n      else unshared++\n    }\n  }\n\n  return Math.max(0, unshared - shared)\n}\n\nexport function getComplexityLength(metrics: IMetricsModel[]): number {\n  const total = metrics.reduce((accum, metric) => {\n    if (metric.children.length === 0) {\n      return accum + metric.complexity\n    }\n\n    const value = getComplexityLength(metric.children)\n    return accum + value + metric.complexity\n  }, 0)\n\n  return total\n}\n\nexport function createProjectProgram(configPath: string, files: string[]): Program {\n  const options = getCompilerOptions(configPath)\n  const program = createProgram(files, options)\n  if (!program) {\n    throw new Error('Failed to create project program')\n  }\n\n  return program\n}\n\nexport async function calculateCBO(directory: string, metricConfig: MetricConfig, includes: string[], excludes: string[]): Promise<MetricResult[]> {\n  const configPath = getProjectConfigPath(directory)\n  const files = await getSourceFiles(directory, includes, excludes)\n\n  const program = createProjectProgram(configPath, files)\n  const items = files\n    .map((file) => {\n      const total = getClassDependenciesLength(file, program)\n      const label = getMetricLabel(total, metricConfig)\n\n      return { total, label, value: file }\n    })\n\n  return items\n}\n\nexport async function calculateRFC(directory: string, metricConfig: MetricConfig, includes: string[], excludes: string[]): Promise<MetricResult[]> {\n  const files = await getSourceFiles(directory, includes, excludes)\n  \n  const items = files\n    .map((file) => {\n      const content = readFileContent(file)\n      const total = getFunctionsLength(content)\n      const label = getMetricLabel(total, metricConfig)\n\n      return { total, label, value: file }\n    })\n\n  return items\n}\n\nexport async function calculateLCOM(directory: string, metricConfig: MetricConfig, includes: string[], excludes: string[]): Promise<MetricResult[]> {\n  const files = await getSourceFiles(directory, includes, excludes)\n  const project = new Project()\n\n  project.addSourceFilesAtPaths(files)\n\n  const items = []\n  for (const sourceFile of project.getSourceFiles()) {\n    for (const classDeclaration of sourceFile.getClasses()) {\n      const className = classDeclaration.getName() ?? '[UnnamedClass]'\n      const total = getCohesionLength(classDeclaration)\n      const label = getMetricLabel(total, metricConfig)\n\n      items.push({ total, label, value: className })\n    }\n  }\n\n  return items\n}\n\nexport async function calculateWMC(directory: string, metricConfig: MetricConfig, includes: string[], excludes: string[]): Promise<MetricResult[]> {\n  const configPath = getProjectConfigPath(directory)\n  const configContent = readFileContent(configPath)\n\n  const target = getProjectTarget(configContent)\n  const files = await getSourceFiles(directory, includes, excludes)\n\n  const items = files.map((file) => {\n    const { metrics } = MetricsParser.getMetrics(file, MetricsConfiguration, target)\n    const total = getComplexityLength([metrics])\n    const label = getMetricLabel(total, metricConfig)\n\n    return { total, label, value: file }\n  })\n\n  return items\n}","import { resolve } from 'path'\nimport { existsSync, writeFileSync } from 'fs'\n\nimport { configTemplate } from './templates/config'\nimport { ArtieConfig, MetricConfig } from './types/config.interface'\nimport { calculateCBO, calculateLCOM, calculateRFC, calculateWMC, printMetric, readFileContent } from './utils'\n\nexport function readConfig(): ArtieConfig {\n  const filePath = resolve(process.cwd(), '.artierc.json')\n  const config = readFileContent(filePath)\n\n  return JSON.parse(config)\n}\n\nexport function getEnableMetrics(config: ArtieConfig): string[] {\n  const enabled = []\n\n  for (const metric of Object.keys(config.options.metrics)) {\n    const currentMetric = config.options.metrics[metric]\n    if (currentMetric.enabled) {\n      enabled.push(metric)\n    }\n  }\n\n  return enabled\n}\n\nexport function initConfig(): void {\n  const filePath = resolve(process.cwd(), '.artierc.json')\n  if (existsSync(filePath)) {\n    return console.log(\"⚠️  The file .artierc.json already exists on the current directory.\")\n  }\n\n  const configContent = JSON.stringify(configTemplate, null, 2)\n  writeFileSync(filePath, configContent)\n\n  console.log('✅ File .artierc.json created!')\n}\n\nexport function getMetricConfig(metricName: string): MetricConfig {\n  const config = readConfig()\n\n  const defaults = config.options.defaultThresholds\n  const metric = config.options.metrics[metricName.toLowerCase()]\n\n  if (!metric) {\n    throw new Error(`Metric ${metricName} not found.`)\n  }\n\n  if (!metric.enabled) {\n    return { enabled: false }\n  }\n\n  return {\n    enabled: metric.enabled,\n    warning: metric.warning ?? defaults.warning,\n    critical: metric.critical ?? defaults.critical,\n    levels: metric.levels ?? defaults.levels,\n  }\n}\n\nexport async function runLens(directory = process.cwd()): Promise<void> {\n  const config = readConfig()\n  const metrics = getEnableMetrics(config)\n\n  const properties = {\n    'cbo': calculateCBO,\n    'rfc': calculateRFC,\n    'lcom': calculateLCOM,\n    'wmc': calculateWMC,\n  }\n\n  console.time('Total time')\n  for (const metric of metrics) {\n    const thresholds = getMetricConfig(metric)\n    const result = await properties[metric](directory, thresholds, config.includes, config.excludes)\n    const total = result.reduce((accum, item) => \n      thresholds.levels.includes(item.label) ? accum + item.total : accum,\n      0,\n    )\n    console.log(`${metric} - Total: ${total}`)\n\n    for (const item of result) {\n      if (thresholds.levels.includes(item.label)){\n        printMetric(`[${item.label}] ${item.value}: ${item.total}`, item.label)\n      }\n    }\n  }\n  console.timeEnd('Total time')\n}\n\nexport function showHelp() {\n  console.log('Artie.JS\\n')\n  console.log('init - Initialize an .artierc.json file with default settings')\n  console.log('run  - Run the lens for all metrics configured')\n}\n\nconst main = async (args: string[]): Promise<void> => {\n  const commands = {\n    init: initConfig,\n    run: runLens,\n    help: showHelp,\n  }\n\n  const argument = args.slice(2)\n  const parameter = argument[0]\n  const directory = argument[1]\n\n  if (parameter && parameter in commands) {\n    await commands[parameter as keyof typeof commands](directory)\n  } else {\n    console.log('⚠️  Invalid command')\n  }\n}\nmain(process.argv)"],"names":["readFileSync","green","yellow","red","readdirSync","join","ScriptTarget","readConfigFile","sys","parseJsonConfigFileContent","resolve","isClassDeclaration","forEachChild","isConstructorDeclaration","isPropertyDeclaration","createProgram","Project","MetricsParser","MetricsConfiguration","existsSync","writeFileSync"],"mappings":"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"}